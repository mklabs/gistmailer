#!/bin/env node

process.env.DEBUG = process.env.DEBUG || 'gistmailer*';

var Mailer  = require('..');
var program = require('commander');
var env     = process.env;

// CLI

program
  .usage('[options] <file>')
  .version(require('../package.json').version)
  .option('-u, --user [user]', 'SMTP auth user configuration')
  .option('-p, --pass [pass]', 'SMTP auth password configuration')
  .option('-s, --service [type]', 'One of the nodemailer service')
  .option('-H, --host [host]', 'SMTP hostname (not needed with service)')
  .option('-P, --port [port]', 'SMTP port (not needed with service)')
  .option('-u, --url [url]', 'Full GIT clone url, or a gist ID')
  .option('-t, --to [to]', 'Destination email')
  .option('-f, --from [from]', 'From email')
  .option('-S, --subject [subject]', 'Content of email subject')
  .parse(process.argv);

// Init

var mailer = new Mailer();
var file = program.args[0];

// Env

if (env.UPSTREAM_DATA) file = env.UPSTREAM_DATA;
if (env.MAIL_USER) program.user = env.MAIL_USER;
if (env.MAIL_PASSWORD) program.pass = env.MAIL_PASSWORD;
if (env.MAIL_SERVICE) program.service = env.MAIL_SERVICE;
if (env.MAIL_HOST) program.host = env.MAIL_HOST;
if (env.MAIL_PORT) program.port = env.MAIL_PORT;
if (env.MAIL_FROM) program.from = env.MAIL_FROM;
if (env.MAIL_SUBJECT) program.subject = env.MAIL_SUBJECT;

if (!file) return program.outputHelp();

// Config

if (program.user && program.pass) mailer.auth({
  user: program.user,
  pass: program.pass
});

mailer.service(program.service);
mailer.host(program.host);
mailer.port(program.port);
mailer.url(program.url);
mailer.to(program.to);
mailer.subject(program.subject);
mailer.file(file);

// Run

mailer.run(function(err) {
  if (err) {
    console.error('Error running mailer', err);
    return process.exit(1);
  }
});
